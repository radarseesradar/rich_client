/* Generated by Together */

package model.test.client;

import model.PersistenceAdapter;

public class Component extends PersistenceAdapter 
{

  public Persistable postAccept( Visitor aVisitor )
  {
    super.postAccept(aVisitor);
    aVisitor.postVisit( (Component) this );
    return this;
  }

    public String getName(){
            return name;
        }

    public void setName(String name){
            this.name = name;
        }

    public String getAlias(){
            return alias;
        }

    public void setAlias(String alias){
            this.alias = alias;
        }

    public Component getBestFriend()
    { return (Component)this.bestFriend.get(); }

    public void setBestFriend(Component zzz )
    { this.bestFriend.set(zzz); }

    public Collection getPlaymates()
    { return this.playmates.getAll(); }

    public void addPlaymate(Component zzz )
    { this.playmates.add(zzz); }

    public void removePlaymate(Component zzz )
    { this.playmates.remove(zzz); }

    public Composite getParent()
    { return (Composite)this.parent.get(); }

    public void setParent(Composite zzz )
    { this.parent.set(zzz); }

    /**
     * @labelDirection forward
     * @directed
     * @supplierRole playmates
     * @supplierCardinality 0..*
     * @associates <{Component}>*/
    private ToMany playmates = new UnidirectionalToMany(this, "playmates", "Component");

    /**
     * @labelDirection forward
     * @supplierRole bestFriend
     * @supplierCardinality 1
     * @directed
     * @associates <{Component}>*/
    private ToOne bestFriend = new UnidirectionalToOne(this, "bestFriend", "Component");
    private String name;
    private String alias;

    /**
     * @clientRole children
     * @clientCardinality 1..*
     * @supplierRole parent
     * @supplierCardinality 1
     * @associates <{Composite}>
     * @undirected 
     */
    private ToOne parent = new ManyToOne(this, "parent", "Composite", "children");
}
