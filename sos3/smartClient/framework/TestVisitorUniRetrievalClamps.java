/* Generated by Together */

package smartClient.framework;

import javax.rmi.*;
import junit.framework.*;
import junit.extensions.*;
import java.io.*;
import model.test.client.*;

/**
 * Title:        Smart Client Framework<br>
 * Copyright:    Copyright (c) Steve McDaniel<br>
 * Company:      Smart Client Framework inc.<br>
 * @author Steve McDaniel
 * @version 1.0
 */
public class TestVisitorUniRetrievalClamps extends TestCase
{
  public static SessionInterface tvObject;

  public static void oneTimeSetUp()
  {
  	try
    {
		SmartClientFramework.getSingleton().setPropertiesUsing( "C:\\sos3\\UnidirectionalRetrievalProperties.txt" );
        SmartClientFramework.getSingleton().establishCommunications();
        tvObject = SmartClientFramework.getSingleton().getSession();
        tvObject.setPropertiesUsing( "C:\\sos3\\UnidirectionalRetrievalProperties.txt" );
    }
    catch( java.rmi.RemoteException e )
    {
    	throw new InternalError( "RMI exception on junit onetime setup for TestVisitorUniRetrievalClamps" );
    }
  }

  public static Test suite( )
  {
    TestSuite aSuite = new TestSuite();
    aSuite.addTest( new TestVisitorUniRetrievalClamps( "testClearDB" ) );
    aSuite.addTest( new TestVisitorUniRetrievalClamps( "testLoadAndRetrieve" ) );

    TestSetup wrapper = new TestSetup(aSuite)
    {
      public void setUp()
      {
        oneTimeSetUp();
      }
    };
    return wrapper;
  }


  public void testClearDB() throws Exception
  {
      tvObject.clearDB();
  }


  public TestVisitorUniRetrievalClamps( String name)
  {
    super( name );
  }

  public void testLoadAndRetrieve() throws Exception
  {
//    Component objGraph = buildObjectGraph();
    Component objGraph =  (new DataGenerator()).buildUniObjectGraph();

    objGraph.save();

    retrieveAndCompare( objGraph );
  }


  private void retrieveAndCompare( Persistable objGraph ) throws Exception
  {
    Stub seedStub;
    seedStub = objGraph.toStub();

    Persistable retrievedObjGraph = tvObject.retrieveAllFromStub(  seedStub );

    VisitorFullEqualityTester aTester = new VisitorFullEqualityTester( retrievedObjGraph );
    objGraph.accept( aTester );
    assert( "Graphs should be the same", aTester.isEqual() );
  }

}
