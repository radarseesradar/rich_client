/* Generated by Together */

package smartClient.framework;

/**
 * Title:        Smart Client Framework<br>
 * Copyright:    Copyright (c) Steve McDaniel<br>
 * Company:      Smart Client Framework inc.<br>
 * @author Steve McDaniel
 * @version 1.0
 */
public class RMIPersistencePolicy implements PersistencePolicyInterface
{

    public SessionInterface createSession() throws java.rmi.RemoteException
    {
    	return (SessionInterface) new RMISession();
    }

	public Persistable findPersistentObject( Object anObj )
    {
    	return (Persistable) SmartClientFramework.getSingleton().getGlobalAssociationsCoordinator().getWorkingSetElementAt( anObj );
    }

	public Persistable createPersistentObject( Persistable aShadow )
    {
		long theScfoid = 0;
        String persistentClassName = "";
      	Class persistentClass = null;
        String persistentPackageName = "";

		try
        {
			persistentClassName = ((Persistable) aShadow).otherClassName();
			persistentPackageName = ((Persistable) aShadow).otherPackageName();
			if( persistentPackageName == null || persistentPackageName.equals("" ) )
				persistentClass = Class.forName( persistentClassName);
			else
				persistentClass = Class.forName( persistentPackageName + "." + persistentClassName);


			theScfoid = ((Persistable) aShadow).getScfoid();
			
			Persistable newlyCreated = (Persistable)persistentClass.newInstance();
			newlyCreated.setScfoid( theScfoid );
			SmartClientFramework.getSingleton().getGlobalAssociationsCoordinator().addToWorkingSet( newlyCreated );
			return newlyCreated;
        }
		catch( InstantiationException e )
		{
			e.printStackTrace();
			throw new InternalError( e.toString() );
		}
		catch( IllegalAccessException e )
		{
		  // This would indicate a programming bug.
		  e.printStackTrace();
		  throw new InternalError( e.toString() );
		}
		catch( ClassNotFoundException e )
		{
		  // This would indicate a programming bug.
		  e.printStackTrace();
		  throw new InternalError( e.toString() );
		}
	}
}

