<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.5 [en] (Win98; I) [Netscape]">
   <meta name="Author" content="Erich Gamma">
   <title>Using JUnit under Visual Age for Java</title>
</head>
<body>

<h1>
<font color="#000000">Using </font><font color="#33FF33">J</font><font color="#CC0000">U</font>nit
under VisualAge for Java 2.0</h1>

<hr WIDTH="100%">
<br>This page describes how to use JUnit with VisualAge for Java:
<ul>
<li>
<a href="#Installing JUnit in VisualAge for">Installing JUnit</a></li>

<li>
<a href="#Using">Using JUnit</a></li>

<li>
<a href="#Installing JUnit as a VisualAge for Java 2.0">Installing JUnit
as a VisualAge for Java Tool</a></li>
</ul>

<h2>
<a NAME="Installing JUnit in VisualAge for"></a>Installing JUnit in VisualAge
for Java</h2>
To install JUnit into VisualAge for Java follow these steps:
<ol>
<li>
import the resources from the INSTALLDIR\junit.jar file into your JUnit
project.</li>

<li>
import the sources for the framework from src.zip into the JUnit project.</li>

<li>
import the sample code and tests cases from INSTALLDIR\junit</li>
</ol>
<b>Notice:</b> The junit.swingui package requires Swing 1.1. If you don't
have this version loaded into your workspaces errors will show up. You
can delete this package when you don't have Swing 1.1 loaded or you can
tweak the import statements so that they refer to Swing 1.0.3 (not recommended).
<h2>
<a NAME="Using"></a>Using JUnit</h2>
Here are some hints for how to use JUnit under VisualAge for Java.
<ul>
<li>
When using the graphical TestRunner use the junit.ui.TestRunner. Don't
use junit.ui.LoadingTestRunner since VAJ takes care of updating the environment
so that you always run the latest version of your code.</li>

<li>
Add the project including the test cases to be run to the TestRunner's
project path:</li>

<ol>
<li>
select the TestRunner</li>

<li>
Selected->Properties</li>

<li>
go to the Class Path page</li>

<li>
add the project to the project path</li>
</ol>
</ul>

<h2>
<a NAME="Installing JUnit as a VisualAge for Java 2.0"></a>Installing JUnit
as a VisualAge for Java tool</h2>
VisualAge for Java provides an <i>open tools API </i>to add custom tools
to the development environment. Here are the steps for how to install JUnit
as a Visual Age for Java Tool:
<ol>
<li>
copy the directory vaj\tools\test-ui into the <b>VAJ_INSTALLDIR\tools</b>
directory</li>

<li>
add JUnit to your workspace class path</li>

<ul>
<li>
open the options window: Window->Options...</li>

<li>
select the <b>Resources</b> section and edit the workspace class path</li>

<li>
click Edit... and enter JUnit</li>
</ul>

<li>
restart VisualAge for Java</li>
</ol>
Once JUnit is installed as a tool you can select a class and run its tests
with the Selected->Tools->JUnit or from the Quick Start menu item.
<p><b>Notice</b>: the projects of the test cases have to be on the workspace
class path to run them. Otherwise JUnit will not find the classes. For
example, to add your MyTests project to the workspace class path follow
the steps above and append your project, e.g., JUnit3;MyTests.
<br>
<hr WIDTH="100%">
</body>
</html>
